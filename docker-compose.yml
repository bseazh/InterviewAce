version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: interviewace_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
    container_name: interviewace_backend
    environment:
      - APP_ENV=dev
      - DATABASE_URL=${DATABASE_URL}
      - SANDBOX_TIMEOUT_SEC=5
      - SANDBOX_MEMORY_MB=256
      - SANDBOX_CPUS=1
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
      # Enable Docker SDK inside backend (dev only)
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  pgdata:
